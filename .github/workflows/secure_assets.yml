name: Check for assets

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]
  pull_request:
    types: [opened, edited]

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check for assets
        id: assets
        uses: actions/github-script@v5
        with:
          script: |
            const issueOrPrBody = context.payload.issue?.body || context.payload.pull_request?.body || context.payload.comment?.body;
            if (issueOrPrBody.includes('/assets')) {
              const fs = require('fs');
              const dateCreated = new Date().toISOString();
              const author = context.payload.sender.login;
              const issueOrPrLink = context.payload.issue?.html_url || context.payload.pull_request?.html_url;
              const commentLink = context.payload.comment?.html_url;
              const repoName = context.repo.repo;
              fs.writeFileSync('assets.txt', `Date created: ${dateCreated}\nAuthor: ${author}\nIssue/PR link: ${issueOrPrLink}\nComment link: ${commentLink}\nRepo name: ${repoName}`);
              return {
                dateCreated,
                author,
                issueOrPrLink,
                commentLink,
                repoName
              };
            }

      - name: Upload assets.txt
        uses: actions/upload-artifact@v2
        with:
          name: assets.txt
          path: ./assets.txt

      - name: Update inventory issue
        uses: actions/github-script@v5
        with:
          script: |
            const dateCreated = "${{ steps.assets.outputs.dateCreated }}";
            const author = "${{ steps.assets.outputs.author }}";
            const issueOrPrLink = "${{ steps.assets.outputs.issueOrPrLink }}";
            const commentLink = "${{ steps.assets.outputs.commentLink }}";
            const repoName = "${{ steps.assets.outputs.repoName }}";
            const issueNumber = "25";
            const newLine = `| ${dateCreated} | ${author} | ${issueOrPrLink} | ${commentLink} | ${repoName} |`;

            const issue = await github.issues.get({
              owner: github.context.repo.owner,
              repo: github.context.repo.repo,
              issue_number: issueNumber
            });

            const issueBody = issue.data.body + '\n' + newLine;

            github.issues.update({
              owner: github.context.repo.owner,
              repo: github.context.repo.repo,
              issue_number: issueNumber,
              body: issueBody
            });
